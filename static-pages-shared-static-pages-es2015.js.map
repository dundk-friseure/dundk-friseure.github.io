{"version":3,"sources":["./node_modules/@scullyio/ng-lib/node_modules/tslib/tslib.es6.js","./libs/shared/static-pages/src/index.ts","./libs/shared/static-pages/src/lib/staticpages-routing.module.ts","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","./libs/shared/static-pages/src/lib/components/static-pages/staticpages.component.ts","./libs/shared/static-pages/src/lib/components/static-pages/staticpages.component.html","./node_modules/@scullyio/ng-lib/__ivy_ngcc__/fesm2015/scullyio-ng-lib.js","./libs/shared/static-pages/src/lib/static-pages.module.ts"],"names":[],"mappings":"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;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,KAAK;AACxB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA,WAAW,EAAE;AACb;AACA,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,kBAAkB,KAAK,EAAE,eAAe;AACxC;AACA;AACA,kBAAkB,KAAK,GAAG,KAAK;AAC/B;AACA,cAAc,KAAK,EAAE,KAAK;AAC1B;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oDAAe,GAAG;AAC7C,wCAAwC,6DAAM;AAC9C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,+CAA+C,6DAAM;AACrD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,4BAA4B,+DAAe,IAAI,gEAAS;AACxD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAuB,0CAAK;AAC5B;AACA,mBAAmB,+CAAE;AACrB,SAAS;AACT;AACA,QAAQ,0DAAG;AACX,oBAAoB;AACpB;AACA;AACA;AACA,QAAQ,gEAAS;AACjB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,uCAAuC,6DAAM;AAC7C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,8BAA8B,6DAAa,wBAAwB,4DAAK,OAAO,0DAAG;AAClF,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gEAAgE,kEAAW;AAC3E;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gCAAgC,4DAAK;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,uDAAuD,wBAAwB,cAAc;AAC7F;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,wCAAwC,UAAU,iBAAiB,UAAU,mBAAmB,EAAE,qCAAqC,EAAE,iBAAiB,IAAI,gBAAgB,aAAa,mBAAmB,eAAe,iBAAiB,MAAM,SAAS,WAAW,IAAI,mDAAmD,sIAAsI;AACrc;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAG;AACrC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA,sBAAsB;AACtB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,uDAAuD,2DAAI;AAC3D,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAS;AACrB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,YAAY,gEAAS;AACrB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,6FAA6F,iEAAU;AACvG,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,uBAAuB,+CAAE,GAAG;AAC5B,aAAa,IAAI,0DAAG;AACpB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA,sEAAsE,wCAAwC,sDAAe,CAAC,wDAAQ,GAAG,sDAAe,CAAC,sDAAa,GAAG;AACzK;AACA;AACA,KAAK,+BAA+B,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AACzE,KAAK,OAAO,sDAAM;AAClB;AACA,gDAAgD,wEAAkB,EAAE,mDAAmD,iCAAiC,8DAAQ,CAAC,wDAAQ,GAAG,8DAAQ,CAAC,sDAAM,GAAG,EAAE,mDAAmD;AACnP,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,GAAG,OAAO,sDAAa,EAAE,EAAE,EAAE,QAAQ,EAAE;AACvD,WAAW,EAiDV;AACD;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW,EAKV;AACD;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oDAAe;AAC1C;AACA;AACA,SAAS;AACT,uCAAuC,4DAAK;AAC5C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,+CAA+C;AAC/C,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6DAAM;AAC5B,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,gCAAgC,6DAAa;AAC7C;AACA,YAAY,6DAAM;AAClB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,oFAAoF,0DAAG;AACvF,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mCAAmC,2DAAI;AACvC,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,wDAAwD,wBAAwB,wBAAwB;AACxG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,wDAAwD,wBAAwB,eAAe;AAC/F;AACA;AACA,kEAAkE,sCAAsC,sDAAe,CAAC,oDAAa,GAAG,sDAAe,CAAC,sDAAa,GAAG,sDAAe,qBAA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CrI;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,WAAW,EAKV;AACD;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA,+CAA+C,2DAAI;AACnD;AACA;AACA;AACA,qDAAqD,6DAAM;AAC3D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,8BAA8B,6DAAa;AAC3C;AACA,QAAQ,6DAAM;AACd,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,8EAA8E,0DAAG;AACjF,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,wBAAwB,+DAAS;AACjC;AACA;AACA,kCAAkC;AAClC;AACA;AACA,mCAAmC,EAAE;AACrC,uCAAuC,kCAAkC,GAAG,2BAA2B;AACvG;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,wBAAwB,uDAAS;AACjC,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AAC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","file":"static-pages-shared-static-pages-es2015.js","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export * from './lib/static-pages.module';\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { StaticpagesComponent } from './components/static-pages/staticpages.component';\n\nconst routes: Routes = [\n  {\n    path: ':id',\n    component: StaticpagesComponent,\n    data: {\n      markdown: true,\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StaticpagesRoutingModule {}\n","import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /** Position of the actions inside the card. */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { Component, ViewEncapsulation } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { ScullyRoutesService } from '@scullyio/ng-lib';\nimport { filter, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'scheibentoenung-schmieder-staticpages',\n  templateUrl: './staticpages.component.html',\n  styleUrls: ['./staticpages.component.css'],\n  preserveWhitespaces: true,\n  encapsulation: ViewEncapsulation.Emulated,\n})\nexport class StaticpagesComponent {\n  current$ = this.router.events.pipe(\n    filter((event) => event instanceof NavigationEnd),\n    switchMap((_) => this.scully.getCurrent())\n  );\n\n  constructor(private router: Router, private scully: ScullyRoutesService) {}\n}\n","<div class=\"section profile-content\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12 ml-auto mr-auto\">\n        <h1>{{ (current$ | async)?.title }}</h1>\n        <p><scully-content></scully-content></p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { __awaiter } from 'tslib';\nimport { InjectionToken, Injectable, Inject, ɵɵdefineInjectable, ɵɵinject, NgZone, isDevMode, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgModule } from '@angular/core';\nimport { NavigationStart, NavigationEnd, Router } from '@angular/router';\nimport { BehaviorSubject, NEVER, of, ReplaySubject, merge } from 'rxjs';\nimport { filter, switchMap, tap, first, map, shareReplay, pluck, take, takeWhile, catchError } from 'rxjs/operators';\nimport { DOCUMENT, Location } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/config/scully-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/router';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction ScullyLibConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    ScullyLibConfig.prototype.useTransferState;\n    /** @type {?|undefined} */\n    ScullyLibConfig.prototype.alwaysMonitor;\n    /** @type {?|undefined} */\n    ScullyLibConfig.prototype.manualIdle;\n    /** @type {?|undefined} */\n    ScullyLibConfig.prototype.baseURIForScullyContent;\n}\n/** @type {?} */\nconst ScullyDefaultSettings = {\n    useTransferState: true,\n    alwaysMonitor: false,\n    manualIdle: false,\n    baseURIForScullyContent: 'http://localhost:1668',\n};\n/** @type {?} */\nconst SCULLY_LIB_CONFIG = new InjectionToken('scullyLibConfig', {\n    factory: (/**\n     * @return {?}\n     */\n    () => ScullyDefaultSettings),\n});\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/utils/basePathOnly.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Take a string, preferably resembling an URL, take out the search params, the anchors, and the ending slash\n * \\@param str\n * @type {?}\n */\nconst basePathOnly = (/**\n * @param {?} str\n * @return {?}\n */\n(str) => {\n    if (str.includes('#')) {\n        str = str.split('#')[0];\n    }\n    if (str.includes('?')) {\n        str = str.split('?')[0];\n    }\n    /** @type {?} */\n    const cleanedUpVersion = str.endsWith('/') ? str.slice(0, -1) : str;\n    return cleanedUpVersion;\n});\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/utils/fetchHttp.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} url\n * @param {?=} responseType\n * @return {?}\n */\nfunction fetchHttp(url, responseType = 'json') {\n    return new Promise((/**\n     * @param {?} resolve\n     * @param {?} reject\n     * @return {?}\n     */\n    (resolve, reject) => {\n        /** @type {?} */\n        const xhr = new XMLHttpRequest();\n        xhr.responseType = responseType;\n        xhr.addEventListener('load', (/**\n         * @param {?} ev\n         * @return {?}\n         */\n        ev => {\n            if (xhr.status !== 200) {\n                return reject(xhr);\n            }\n            resolve(xhr.response);\n        }));\n        xhr.addEventListener('error', (/**\n         * @param {...?} err\n         * @return {?}\n         */\n        (...err) => reject(err)));\n        xhr.open('get', url, true);\n        xhr.send();\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/utils/isScully.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable: no-string-literal\n/** @type {?} */\nconst isScullyRunning = (/**\n * @return {?}\n */\n() => window && window['ScullyIO'] === 'running');\n/** @type {?} */\nconst isScullyGenerated = (/**\n * @return {?}\n */\n() => window && window['ScullyIO'] === 'generated');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/utils/merge-paths.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} base\n * @param {?} path\n * @return {?}\n */\nfunction mergePaths(base, path) {\n    if (base.endsWith('/') && path.startsWith('/')) {\n        return `${base}${path.substr(1)}`;\n    }\n    if (!base.endsWith('/') && !path.startsWith('/')) {\n        return `${base}/${path}`;\n    }\n    return `${base}${path}`;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/transfer-state/transfer-state.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SCULLY_SCRIPT_ID = `ScullyIO-transfer-state`;\n/** @type {?} */\nconst SCULLY_STATE_START = `/** ___SCULLY_STATE_START___ */`;\n/** @type {?} */\nconst SCULLY_STATE_END = `/** ___SCULLY_STATE_END___ */`;\n/** @type {?} */\nconst initialStateDone = '__done__with__Initial__navigation__';\n/**\n * @record\n */\nfunction State() { }\n// Adding this dynamic comment to suppress ngc error around Document as a DI token.\n// https://github.com/angular/angular/issues/20351#issuecomment-344009887\n/**\n * \\@dynamic\n */\nclass TransferStateService {\n    /**\n     * @param {?} document\n     * @param {?} router\n     */\n    constructor(document, router) {\n        this.document = document;\n        this.router = router;\n        /**\n         * parse from index, or load from data.json, according to scullConfig setting\n         */\n        this.inlineOnly = false;\n        /**\n         * set the currentBase to something that it can never be\n         */\n        this.currentBaseUrl = '//';\n        /**\n         * subject to fire off incoming states\n         */\n        this.stateBS = new BehaviorSubject({});\n        this.state$ = this.stateBS.pipe(filter((/**\n         * @param {?} state\n         * @return {?}\n         */\n        (state) => state !== undefined)));\n        // emit the next url when routing is complete\n        this.nextUrl = this.router.events.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        (e) => e instanceof NavigationStart)), switchMap((/**\n         * @param {?} e\n         * @return {?}\n         */\n        (e) => {\n            if (basePathOnly(this.initialUrl) === basePathOnly(e.url)) {\n                /** don't kick off on initial load to prevent flicker */\n                this.initialUrl = initialStateDone;\n                return NEVER;\n            }\n            return of(e);\n        })), \n        /** reset the state, so new components will never get stale data */\n        tap((/**\n         * @return {?}\n         */\n        () => this.stateBS.next(undefined))), \n        /** prevent emitting before navigation to _this_ URL is done. */\n        switchMap((/**\n         * @param {?} e\n         * @return {?}\n         */\n        (e) => this.router.events.pipe(filter((/**\n         * @param {?} ev\n         * @return {?}\n         */\n        (ev) => ev instanceof NavigationEnd && ev.url === e.url)), first()))), map((/**\n         * @param {?} ev\n         * @return {?}\n         */\n        (ev) => basePathOnly(ev.urlAfterRedirects || ev.url))), shareReplay(1));\n    }\n    /**\n     * @return {?}\n     */\n    startMonitoring() {\n        if (window && window['ScullyIO-injected'] && window['ScullyIO-injected'].inlineStateOnly) {\n            this.inlineOnly = true;\n        }\n        this.setupEnvForTransferState();\n        this.setupStartNavMonitoring();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    setupEnvForTransferState() {\n        if (isScullyRunning()) {\n            this.injectScript();\n            // In Scully puppeteer\n            /** @type {?} */\n            const exposed = window['ScullyIO-exposed'] || {};\n            if (exposed.transferState) {\n                this.stateBS.next(exposed.transferState);\n                this.saveState(exposed.transferState);\n            }\n        }\n        else if (isScullyGenerated()) {\n            // On the client AFTER scully rendered it\n            this.initialUrl = window.location.pathname || '__no_NO_no__';\n            this.initialUrl = this.initialUrl !== '/' && this.initialUrl.endsWith('/') ? this.initialUrl.slice(0, -1) : this.initialUrl;\n            /** set the initial state */\n            this.stateBS.next((window && window[SCULLY_SCRIPT_ID]) || {});\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    injectScript() {\n        this.script = this.document.createElement('script');\n        this.script.setAttribute('id', SCULLY_SCRIPT_ID);\n        /** @type {?} */\n        let last = document.body.lastChild;\n        while (last.previousSibling.nodeName === 'SCRIPT') {\n            last = (/** @type {?} */ (last.previousSibling));\n        }\n        document.body.insertBefore(this.script, last);\n    }\n    /**\n     * Getstate will return an observable that containes the data.\n     * It does so right after the navigation for the page has finished.\n     * please note, this works SYNC on initial route, preventing a flash of content.\n     * @template T\n     * @param {?} name The name of the state to\n     * @return {?}\n     */\n    getState(name) {\n        /** start of the fetch for the current active route. */\n        this.fetchTransferState();\n        return this.state$.pipe(pluck(name)\n        // tap((data) => console.log('tss', data))\n        );\n    }\n    /**\n     * Read the current state, and see if it has an value for the name.\n     * (note the value it containes still can be undefined!)\n     * @param {?} name\n     * @return {?}\n     */\n    stateHasKey(name) {\n        return this.stateBS.value && this.stateBS.value.hasOwnProperty(name);\n    }\n    /**\n     * Read the current state, and see if it has an value for the name.\n     * ys also if there is actually an value in the state.\n     * @param {?} name\n     * @return {?}\n     */\n    stateKeyHasValue(name) {\n        return this.stateBS.value && this.stateBS.value.hasOwnProperty(name) && this.stateBS.value[name] != null;\n    }\n    /**\n     * SetState will update the script in the generated page with data added.\n     * @template T\n     * @param {?} name\n     * @param {?} val\n     * @return {?}\n     */\n    setState(name, val) {\n        /** @type {?} */\n        const newState = Object.assign(Object.assign({}, this.stateBS.value), { [name]: val });\n        this.stateBS.next(newState);\n        this.saveState(newState);\n    }\n    /**\n     * @private\n     * @param {?} newState\n     * @return {?}\n     */\n    saveState(newState) {\n        if (isScullyRunning()) {\n            this.script.textContent = `{window['${SCULLY_SCRIPT_ID}']=_u(\\`${SCULLY_STATE_START}${escapeHtml(JSON.stringify(newState))}${SCULLY_STATE_END}\\`);function _u(t) {t=t.split('${SCULLY_STATE_START}')[1].split('${SCULLY_STATE_END}')[0];const u={'_~b~': \"${'`'}\",'_~q~': \"'\",'_~s~': '/','_~l~': '<','_~g~': '>'};return JSON.parse(t.replace(/\\\\'/g,\\`\\\\\\\\\\\"\\`).replace(/_~[^]~/g, (s) => u[s]).replace(/\\\\n/g,\\`\\\\\\\\n\\`).replace(/\\\\r/g,\\`\\\\\\\\r\\`));}}`;\n        }\n    }\n    /**\n     * starts monitoring the router, and keep the url from the last completed navigation handy.\n     * @private\n     * @return {?}\n     */\n    setupStartNavMonitoring() {\n        if (!isScullyGenerated()) {\n            return;\n        }\n        /** start monitoring the routes */\n        this.nextUrl.subscribe();\n    }\n    /**\n     * Wraps an observable into scully's transfer state. If data for the provided `name` is\n     * available in the state, it gets returned. Otherwise, the `originalState` observable will\n     * be returned.\n     *\n     * On subsequent calls, the data in the state will always be returned. The `originalState` will\n     * be returned only once.\n     *\n     * This is a convenience method which does not require you to use `getState`/`setState` manually.\n     *\n     * @template T\n     * @param {?} name state key\n     * @param {?} originalState an observable which yields the desired data\n     * @return {?}\n     */\n    useScullyTransferState(name, originalState) {\n        if (isScullyGenerated()) {\n            return this.getState(name);\n        }\n        return originalState.pipe(tap((/**\n         * @param {?} state\n         * @return {?}\n         */\n        (state) => this.setState(name, state))));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    fetchTransferState() {\n        return __awaiter(this, void 0, void 0, function* () {\n            /**\n             * helper to read the part before the first slash (ignores leading slash)\n             * @type {?}\n             */\n            const base = (/**\n             * @param {?} url\n             * @return {?}\n             */\n            (url) => url.split('/').filter((/**\n             * @param {?} part\n             * @return {?}\n             */\n            (part) => part.trim() !== ''))[0]);\n            /** put this in the next event cycle so the correct route can be read */\n            yield new Promise((/**\n             * @param {?} r\n             * @return {?}\n             */\n            (r) => setTimeout(r, 0)));\n            /**\n             * get the current url\n             * @type {?}\n             */\n            const currentUrl = yield this.nextUrl.pipe(take(1)).toPromise();\n            /** @type {?} */\n            const baseUrl = base(currentUrl);\n            if (this.currentBaseUrl === baseUrl) {\n                /** already monitoring, don't tho a thing */\n                return;\n            }\n            /** keep the baseUrl for later reference */\n            this.currentBaseUrl = baseUrl;\n            this.nextUrl\n                .pipe(\n            /** keep updating till we move to another route */\n            takeWhile((/**\n             * @param {?} url\n             * @return {?}\n             */\n            (url) => base(url) === this.currentBaseUrl)), \n            // Get the next route's data from the the index or data file\n            switchMap((/**\n             * @param {?} url\n             * @return {?}\n             */\n            (url) => (this.inlineOnly ? this.readFromIndex(url) : this.readFromJson(url)))), catchError((/**\n             * @param {?} e\n             * @return {?}\n             */\n            (e) => {\n                // TODO: come up with better error text.\n                /** the developer needs to know, but its not fatal, so just return an empty state */\n                console.warn('Error while loading of parsing Scully state:', e);\n                return of({});\n            })), tap((/**\n             * @param {?} newState\n             * @return {?}\n             */\n            (newState) => {\n                /** and activate the state in the components. on any error it will be empty */\n                this.stateBS.next(newState);\n            })))\n                .subscribe({\n                /**\n                 * when completes (different URL)\n                 */\n                complete: (/**\n                 * @return {?}\n                 */\n                () => {\n                    /** reset the currentBaseUrl */\n                    this.currentBaseUrl = '//';\n                }),\n            });\n        });\n    }\n    /**\n     * @private\n     * @param {?} url\n     * @return {?}\n     */\n    readFromJson(url) {\n        return fetchHttp(dropPreSlash(mergePaths(url, '/data.json')));\n    }\n    /**\n     * @private\n     * @param {?} url\n     * @return {?}\n     */\n    readFromIndex(url) {\n        return fetchHttp(dropPreSlash(mergePaths(url, '/index.html')), 'text').then((/**\n         * @param {?} html\n         * @return {?}\n         */\n        (html) => {\n            /** @type {?} */\n            const newStateStr = html.split(SCULLY_STATE_START)[1].split(SCULLY_STATE_END)[0];\n            return JSON.parse(unescapeHtml(newStateStr));\n        }));\n    }\n}\nTransferStateService.ɵfac = function TransferStateService_Factory(t) { return new (t || TransferStateService)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc1.Router)); };\n/** @nocollapse */\nTransferStateService.ctorParameters = () => [\n    { type: Document, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Router }\n];\n/** @nocollapse */ TransferStateService.ɵprov = ɵɵdefineInjectable({ factory: function TransferStateService_Factory() { return new TransferStateService(ɵɵinject(DOCUMENT), ɵɵinject(Router)); }, token: TransferStateService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TransferStateService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: Document, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.Router }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.script;\n    /**\n     * parse from index, or load from data.json, according to scullConfig setting\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.inlineOnly;\n    /**\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.initialUrl;\n    /**\n     * set the currentBase to something that it can never be\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.currentBaseUrl;\n    /**\n     * subject to fire off incoming states\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.stateBS;\n    /**\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.state$;\n    /**\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.nextUrl;\n    /**\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.document;\n    /**\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.router;\n}\n/**\n * @param {?} string\n * @return {?}\n */\nfunction dropPreSlash(string) {\n    return string.startsWith('/') ? string.slice(1) : string;\n}\n/**\n * we need to escape our HTML to prevent XXS,\n * It needs to be custom, because the content can already contain html-escaped sequences\n *\n * @param {?} text\n * @return {?}\n */\nfunction escapeHtml(text) {\n    /** @type {?} */\n    const escapedText = {\n        \"'\": '_~q~',\n        '`': '_~b~',\n        '/': '_~s~',\n        '<': '_~l~',\n        '>': '_~g~',\n    };\n    return (text\n        /** escape the json */\n        .replace(/[`'<>\\/]/g, (/**\n     * @param {?} s\n     * @return {?}\n     */\n    (s) => escapedText[s]))\n        /** replace escaped double-quotes with single */\n        .replace(/\\\\\\\"/g, `\\\\'`));\n}\n/**\n * Unescape our custom escaped texts\n * @param {?} text\n * @return {?}\n */\nfunction unescapeHtml(text) {\n    /** @type {?} */\n    const unescapedText = {\n        '_~q~': \"'\",\n        '_~b~': '`',\n        '_~s~': '/',\n        '_~l~': '<',\n        '_~g~': '>',\n    };\n    return (text\n        /** put back escaped double quotes to make valid json again */\n        .replace(/\\\\'/g, `\\\\\"`)\n        /** replace the custom escapes */\n        .replace(/_~[^]~/g, (/**\n     * @param {?} s\n     * @return {?}\n     */\n    (s) => unescapedText[s]))\n        /** restore newlines+cr */\n        .replace(/\\n/g, '/n')\n        .replace(/\\r/g, '/r'));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/idleMonitor/idle-monitor.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction LocalState() { }\nif (false) {\n    /** @type {?} */\n    LocalState.prototype.idle;\n    /** @type {?} */\n    LocalState.prototype.timeOut;\n}\n// if (window) {\n//   window.addEventListener('AngularReady', ev => {\n//     console.log('appReady fired', ev);\n//   });\n// }\nclass IdleMonitorService {\n    /**\n     * @param {?} zone\n     * @param {?} router\n     * @param {?} conf\n     * @param {?} tss\n     */\n    constructor(zone, router, conf, tss) {\n        this.zone = zone;\n        this.router = router;\n        /**\n         * store the 'landing' url so we can skip it in idle-check.\n         */\n        this.initialUrl = dropEndingSlash(window && window.location.pathname) || '';\n        this.imState = new BehaviorSubject({\n            idle: false,\n            timeOut: 5 * 1000 // 5 seconds timeout as default\n        });\n        this.idle$ = this.imState.pipe(pluck('idle'));\n        this.initApp = new Event('AngularInitialized', {\n            bubbles: true,\n            cancelable: false\n        });\n        this.appReady = new Event('AngularReady', {\n            bubbles: true,\n            cancelable: false\n        });\n        this.appTimeout = new Event('AngularTimeout', {\n            bubbles: true,\n            cancelable: false\n        });\n        /** provide the default for missing conf paramter */\n        this.scullyLibConfig = Object.assign({}, ScullyDefaultSettings, conf);\n        /** @type {?} */\n        const exposed = window['ScullyIO-exposed'] || {};\n        /** @type {?} */\n        const manualIdle = !!exposed.manualIdle;\n        if (!this.scullyLibConfig.manualIdle &&\n            window &&\n            (this.scullyLibConfig.alwaysMonitor || isScullyRunning())) {\n            window.dispatchEvent(this.initApp);\n            this.router.events\n                .pipe(filter((/**\n             * @param {?} ev\n             * @return {?}\n             */\n            ev => ev instanceof NavigationEnd && ev.urlAfterRedirects !== undefined)), \n            /** don't check the page that has this setting. event is only importand on page load */\n            filter((/**\n             * @param {?} ev\n             * @return {?}\n             */\n            (ev) => manualIdle ? ev.urlAfterRedirects !== this.initialUrl : true)), tap((/**\n             * @return {?}\n             */\n            () => this.zoneIdleCheck())))\n                .subscribe();\n        }\n        if (this.scullyLibConfig.manualIdle) {\n            /** we still need the init event. */\n            window.dispatchEvent(this.initApp);\n        }\n        if (this.scullyLibConfig.useTransferState) {\n            /** don't start monitoring if people don't use the transferState */\n            tss.startMonitoring();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    fireManualMyAppReadyEvent() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.dispatchEvent(this.appReady);\n        });\n    }\n    /**\n     * @return {?}\n     */\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.idle$.pipe(take(1)).toPromise();\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    zoneIdleCheck() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (Zone === undefined) {\n                return this.simpleTimeout();\n            }\n            /** @type {?} */\n            const taskTrackingZone = Zone.current.get('TaskTrackingZone');\n            if (taskTrackingZone === undefined) {\n                return this.simpleTimeout();\n            }\n            if (this.imState.value.idle) {\n                yield this.setState('idle', false);\n            }\n            /** run the actual check for 'idle' outsides zone, otherwise it will never come to an end. */\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                let tCancel;\n                /** @type {?} */\n                let count = 0;\n                /** @type {?} */\n                const startTime = Date.now();\n                /** @type {?} */\n                const monitor = (/**\n                 * @return {?}\n                 */\n                () => {\n                    clearTimeout(tCancel);\n                    // console.table(taskTrackingZone.macroTasks);\n                    if (Date.now() - startTime > 30 * 1000) {\n                        /** bail out after 30 seconds. */\n                        window.dispatchEvent(this.appTimeout);\n                        return;\n                    }\n                    if ((taskTrackingZone.macroTasks.length > 0 &&\n                        taskTrackingZone.macroTasks.find((/**\n                         * @param {?} z\n                         * @return {?}\n                         */\n                        (z) => z.source.includes('XMLHttpRequest'))) !== undefined) ||\n                        count < 1 // make sure it runs at least once!\n                    ) {\n                        tCancel = setTimeout((/**\n                         * @return {?}\n                         */\n                        () => {\n                            count += 1;\n                            monitor();\n                        }), 50);\n                        return;\n                    }\n                    this.zone.run((/**\n                     * @return {?}\n                     */\n                    () => {\n                        /** run this inside the zone, and give the app 250Ms to wrap up, before scraping starts */\n                        setTimeout((/**\n                         * @return {?}\n                         */\n                        () => {\n                            window.dispatchEvent(this.appReady);\n                            this.setState('idle', true);\n                        }), 250);\n                    }));\n                });\n                monitor();\n            }));\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    simpleTimeout() {\n        return __awaiter(this, void 0, void 0, function* () {\n            /** zone not available, use a timeout instead. */\n            console.warn('Scully is using timeouts, add the needed polyfills instead!');\n            yield new Promise((/**\n             * @param {?} r\n             * @return {?}\n             */\n            r => setTimeout(r, this.imState.value.timeOut)));\n            window.dispatchEvent(this.appReady);\n        });\n    }\n    /**\n     * @param {?} milliseconds\n     * @return {?}\n     */\n    setPupeteerTimeoutValue(milliseconds) {\n        this.imState.next(Object.assign(Object.assign({}, this.imState.value), { timeOut: milliseconds }));\n    }\n    /**\n     * @private\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    setState(key, value) {\n        this.imState.next(Object.assign(Object.assign({}, this.imState.value), { [key]: value }));\n    }\n}\nIdleMonitorService.ɵfac = function IdleMonitorService_Factory(t) { return new (t || IdleMonitorService)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Router), ɵngcc0.ɵɵinject(SCULLY_LIB_CONFIG), ɵngcc0.ɵɵinject(TransferStateService)); };\n/** @nocollapse */\nIdleMonitorService.ctorParameters = () => [\n    { type: NgZone },\n    { type: Router },\n    { type: undefined, decorators: [{ type: Inject, args: [SCULLY_LIB_CONFIG,] }] },\n    { type: TransferStateService }\n];\n/** @nocollapse */ IdleMonitorService.ɵprov = ɵɵdefineInjectable({ factory: function IdleMonitorService_Factory() { return new IdleMonitorService(ɵɵinject(NgZone), ɵɵinject(Router), ɵɵinject(SCULLY_LIB_CONFIG), ɵɵinject(TransferStateService)); }, token: IdleMonitorService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IdleMonitorService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Router }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [SCULLY_LIB_CONFIG]\n            }] }, { type: TransferStateService }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.scullyLibConfig;\n    /**\n     * store the 'landing' url so we can skip it in idle-check.\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.initialUrl;\n    /**\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.imState;\n    /** @type {?} */\n    IdleMonitorService.prototype.idle$;\n    /**\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.initApp;\n    /**\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.appReady;\n    /**\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.appTimeout;\n    /**\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.zone;\n    /**\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.router;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction dropEndingSlash(str) {\n    return str.endsWith('/') ? str.slice(0, -1) : str;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/route-service/scully-routes.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction ScullyRoute() { }\nif (false) {\n    /** @type {?} */\n    ScullyRoute.prototype.route;\n    /** @type {?|undefined} */\n    ScullyRoute.prototype.title;\n    /** @type {?|undefined} */\n    ScullyRoute.prototype.slugs;\n    /** @type {?|undefined} */\n    ScullyRoute.prototype.published;\n    /** @type {?|undefined} */\n    ScullyRoute.prototype.slug;\n    /** @type {?|undefined} */\n    ScullyRoute.prototype.sourceFile;\n    /** @type {?|undefined} */\n    ScullyRoute.prototype.lang;\n    /* Skipping unhandled member: [prop: string]: any;*/\n}\nclass ScullyRoutesService {\n    /**\n     * @param {?} router\n     */\n    constructor(router) {\n        this.router = router;\n        this.refresh = new ReplaySubject(1);\n        /**\n         * An observable with all routes, published and unpublished alike\n         */\n        this.allRoutes$ = this.refresh.pipe(switchMap((/**\n         * @return {?}\n         */\n        () => fetchHttp('assets/scully-routes.json'))), catchError((/**\n         * @return {?}\n         */\n        () => {\n            console.warn('Scully routes file not found, are you running the Scully generated version of your site?');\n            return of((/** @type {?} */ ([])));\n        })), \n        /** filter out all non-array results */\n        filter((/**\n         * @param {?} routes\n         * @return {?}\n         */\n        (routes) => Array.isArray(routes))), map(this.cleanDups), shareReplay({ refCount: false, bufferSize: 1 }));\n        /**\n         * An observable with available routes (all published routes)\n         */\n        this.available$ = this.allRoutes$.pipe(map((/**\n         * @param {?} list\n         * @return {?}\n         */\n        (list) => list.filter((/**\n         * @param {?} r\n         * @return {?}\n         */\n        (r) => r.hasOwnProperty('published') ? r.published !== false : true)))), shareReplay({ refCount: false, bufferSize: 1 }));\n        /**\n         * an observable with all unpublished routes\n         */\n        this.unPublished$ = this.allRoutes$.pipe(map((/**\n         * @param {?} list\n         * @return {?}\n         */\n        (list) => list.filter((/**\n         * @param {?} r\n         * @return {?}\n         */\n        (r) => r.hasOwnProperty('published') ? r.published === false : false)))), shareReplay({ refCount: false, bufferSize: 1 }));\n        /**\n         * An observable with the top-level off all published routes.\n         * (in an urls it would be `http://www.sample.org/__thisPart__/subroutes`)\n         */\n        this.topLevel$ = this.available$.pipe(map((/**\n         * @param {?} routes\n         * @return {?}\n         */\n        (routes) => routes.filter((/**\n         * @param {?} r\n         * @return {?}\n         */\n        (r) => !r.route.slice(1).includes('/'))))), shareReplay({ refCount: false, bufferSize: 1 }));\n        /** kick off first cycle */\n        this.reload();\n    }\n    /**\n     * returns an observable that returns the route information for the\n     * route currently selected. subscribes to route-events to update when needed\n     * @return {?}\n     */\n    getCurrent() {\n        if (!location) {\n            /** probably not in a browser, no current location available */\n            return of();\n        }\n        /** fire off at start, and when navigation is done. */\n        return merge(of(new NavigationEnd(0, '', '')), this.router.events).pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        (e) => e instanceof NavigationEnd)), switchMap((/**\n         * @return {?}\n         */\n        () => this.available$)), map((/**\n         * @param {?} list\n         * @return {?}\n         */\n        (list) => {\n            /** @type {?} */\n            const curLocation = basePathOnly(encodeURI(location.pathname).trim());\n            return list.find((/**\n             * @param {?} r\n             * @return {?}\n             */\n            (r) => curLocation === basePathOnly(r.route.trim()) ||\n                (r.slugs &&\n                    Array.isArray(r.slugs) &&\n                    r.slugs.find((/**\n                     * @param {?} slug\n                     * @return {?}\n                     */\n                    (slug) => curLocation.endsWith(basePathOnly(slug.trim())))))));\n        })));\n    }\n    /**\n     * internal, as routes can have multiple slugs, and so occur multiple times\n     * this util function collapses all slugs back into 1 route.\n     * @private\n     * @param {?} routes\n     * @return {?}\n     */\n    cleanDups(routes) {\n        /** @type {?} */\n        const m = new Map();\n        /** check for duplicates by comparing all, include route in comparison if its the only thing, or the only thing with only the tile  */\n        routes.forEach((/**\n         * @param {?} r\n         * @return {?}\n         */\n        (r) => m.set(JSON.stringify(Object.assign(Object.assign({}, r), { route: hasOtherprops(r) ? '' : r.route })), r)));\n        return [...m.values()];\n    }\n    /**\n     * an utility that will force a reload of the `scully-routes.json` file\n     * @return {?}\n     */\n    reload() {\n        this.refresh.next();\n    }\n}\nScullyRoutesService.ɵfac = function ScullyRoutesService_Factory(t) { return new (t || ScullyRoutesService)(ɵngcc0.ɵɵinject(ɵngcc1.Router)); };\n/** @nocollapse */\nScullyRoutesService.ctorParameters = () => [\n    { type: Router }\n];\n/** @nocollapse */ ScullyRoutesService.ɵprov = ɵɵdefineInjectable({ factory: function ScullyRoutesService_Factory() { return new ScullyRoutesService(ɵɵinject(Router)); }, token: ScullyRoutesService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScullyRoutesService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: ɵngcc1.Router }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ScullyRoutesService.prototype.refresh;\n    /**\n     * An observable with all routes, published and unpublished alike\n     * @type {?}\n     */\n    ScullyRoutesService.prototype.allRoutes$;\n    /**\n     * An observable with available routes (all published routes)\n     * @type {?}\n     */\n    ScullyRoutesService.prototype.available$;\n    /**\n     * an observable with all unpublished routes\n     * @type {?}\n     */\n    ScullyRoutesService.prototype.unPublished$;\n    /**\n     * An observable with the top-level off all published routes.\n     * (in an urls it would be `http://www.sample.org/__thisPart__/subroutes`)\n     * @type {?}\n     */\n    ScullyRoutesService.prototype.topLevel$;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScullyRoutesService.prototype.router;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction hasOtherprops(obj) {\n    /** @type {?} */\n    const keys = Object.keys(obj);\n    if (keys.length === 1 && keys.includes('route')) {\n        return false;\n    }\n    if (keys.length === 2 && keys.includes('route') && keys.includes('title')) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/utils/findComments.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns an array of nodes coninting all the html comments in the element.\n * When a searchText is given this is narrowed down to only comments that contian this text\n * @param {?} rootElem Element to search nto\n * @param {?=} searchText optional string that needs to be in a HTML comment\n * @return {?}\n */\nfunction findComments(rootElem, searchText) {\n    /** @type {?} */\n    const comments = [];\n    // Fourth argument, which is actually obsolete according to the DOM4 standard, seems required in IE 11\n    /** @type {?} */\n    const iterator = document.createNodeIterator(rootElem, NodeFilter.SHOW_COMMENT, {\n        acceptNode: (/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => {\n            // Logic to determine whether to accept, reject or skip node\n            // In this case, only accept nodes that have content\n            // that is containing our searchText, by rejecting any other nodes.\n            if (searchText &&\n                node.nodeValue &&\n                !node.nodeValue.includes(searchText)) {\n                return NodeFilter.FILTER_REJECT;\n            }\n            return NodeFilter.FILTER_ACCEPT;\n        })\n    }\n    // , false // IE-11 support requires this parameter.\n    );\n    /** @type {?} */\n    let curNode;\n    // tslint:disable-next-line: no-conditional-assignment\n    while ((curNode = iterator.nextNode())) {\n        comments.push(curNode);\n    }\n    return comments;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/scully-content/scully-content.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction ScullyContent() { }\nif (false) {\n    /** @type {?} */\n    ScullyContent.prototype.html;\n    /** @type {?} */\n    ScullyContent.prototype.cssId;\n}\n/**\n * this is needed, because otherwise the CLI borks while building\n * @type {?}\n */\nconst scullyBegin = '<!--scullyContent-begin-->';\n/** @type {?} */\nconst scullyEnd = '<!--scullyContent-end-->';\n/**\n * use the module's closure to keep a system-wide check for the last handled URL.\n * @type {?}\n */\nlet lastHandled;\nclass ScullyContentComponent {\n    /**\n     * @param {?} elmRef\n     * @param {?} srs\n     * @param {?} router\n     * @param {?} location\n     * @param {?} conf\n     */\n    constructor(elmRef, srs, router, location, conf) {\n        this.elmRef = elmRef;\n        this.srs = srs;\n        this.router = router;\n        this.location = location;\n        this.conf = conf;\n        this.baseUrl = this.conf.useTransferState || ScullyDefaultSettings.useTransferState;\n        this.elm = (/** @type {?} */ (this.elmRef.nativeElement));\n        /**\n         * pull in all  available routes into an eager promise\n         */\n        this.routes = this.srs.allRoutes$.pipe(take(1)).toPromise();\n        /**\n         * monitor the router, so we can update while navigating in the same 'page' see #311\n         */\n        this.routeUpdates$ = this.router.events.pipe(filter((/**\n         * @param {?} ev\n         * @return {?}\n         */\n        (ev) => ev instanceof NavigationEnd)), \n        /** don't replace if we are already there */\n        filter((/**\n         * @param {?} ev\n         * @return {?}\n         */\n        (ev) => lastHandled && !lastHandled.endsWith(ev.urlAfterRedirects))), tap((/**\n         * @param {?} r\n         * @return {?}\n         */\n        (r) => this.replaceContent())));\n        this.routeSub = this.routeUpdates$.subscribe();\n        /** do this from constructor, so it runs ASAP */\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.elm) {\n            /** this will only fire in a browser environment */\n            this.handlePage();\n        }\n    }\n    /**\n     * Loads the static content from scully into the view\n     * Will fetch the content from sibling links with xmlHTTPrequest\n     * @private\n     * @return {?}\n     */\n    handlePage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            /** @type {?} */\n            const curPage = basePathOnly(location.href);\n            if (lastHandled === curPage) {\n                /**\n                 * Due to the fix we needed for #311\n                 * it might happen that this routine is called\n                 * twice for the same page.\n                 * this code will make sure the second one is ignored.\n                 */\n                return;\n            }\n            lastHandled = curPage;\n            /** @type {?} */\n            const template = document.createElement('template');\n            /** @type {?} */\n            const currentCssId = this.getCSSId(this.elm);\n            if (window.scullyContent) {\n                /**\n                 * upgrade existing static content\n                 * @type {?}\n                 */\n                const htmlString = window.scullyContent.html;\n                if (currentCssId !== window.scullyContent.cssId) {\n                    /** replace the angular cssId */\n                    template.innerHTML = htmlString.split(window.scullyContent.cssId).join(currentCssId);\n                }\n                else {\n                    template.innerHTML = htmlString;\n                }\n            }\n            else {\n                /**\n                 *   NOTE\n                 * when updateting the texts for the errors, make sure you leave the\n                 *  `id=\"___scully-parsing-error___\"`\n                 * in there. That way users can detect rendering errors in their CI\n                 * on a reliable way.\n                 */\n                yield fetchHttp(curPage + '/index.html', 'text')\n                    .catch((/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => {\n                    if (isDevMode()) {\n                        /**\n                         * in devmode (usually in `ng serve`) check the scully server for the content too\n                         * @type {?}\n                         */\n                        const uri = new URL(location.href);\n                        /** @type {?} */\n                        const url = `${this.conf.baseURIForScullyContent}/${basePathOnly(uri.pathname)}/index.html`;\n                        return fetchHttp(url, 'text');\n                    }\n                    else {\n                        return Promise.reject(e);\n                    }\n                }))\n                    .then((/**\n                 * @param {?} html\n                 * @return {?}\n                 */\n                (html) => {\n                    try {\n                        /** @type {?} */\n                        const htmlString = html.split(scullyBegin)[1].split(scullyEnd)[0];\n                        if (htmlString.includes('_ngcontent')) {\n                            /**\n                             * update the angular cssId\n                             * @type {?}\n                             */\n                            const atr = '_ngcontent' + htmlString.split('_ngcontent')[1].split('=')[0];\n                            template.innerHTML = htmlString.split(atr).join(currentCssId);\n                        }\n                        else {\n                            template.innerHTML = htmlString;\n                        }\n                    }\n                    catch (e) {\n                        template.innerHTML = `<h2 id=\"___scully-parsing-error___\">Sorry, could not parse static page content</h2>\n            <p>This might happen if you are not using the static generated pages.</p>`;\n                    }\n                }))\n                    .catch((/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => {\n                    template.innerHTML = '<h2 id=\"___scully-parsing-error___\">Sorry, could not load static page content</h2>';\n                    console.error('problem during loading static scully content', e);\n                }));\n            }\n            /**\n             * insert the whole thing just before the `<scully-content>` element\n             * @type {?}\n             */\n            const parent = this.elm.parentElement || document.body;\n            /** @type {?} */\n            const begin = document.createComment('scullyContent-begin');\n            /** @type {?} */\n            const end = document.createComment('scullyContent-end');\n            parent.insertBefore(begin, this.elm);\n            parent.insertBefore(template.content, this.elm);\n            parent.insertBefore(end, this.elm);\n            /** upgrade all hrefs to simulated routelinks (in next microtask) */\n            setTimeout((/**\n             * @return {?}\n             */\n            () => document.querySelectorAll('[href]').forEach(this.upgradeToRoutelink.bind(this))), 10);\n            // document.querySelectorAll('[href]').forEach(this.upgradeToRoutelink.bind(this));\n        });\n    }\n    /**\n     * upgrade a **href** attributes to links that respect the Angular router\n     * and don't do a full page reload. Only works on links that are found in the\n     * Scully route config file.\n     * @param {?} elm the element containing the **hrefs**\n     * @return {?}\n     */\n    upgradeToRoutelink(elm) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!['A', 'BUTTON'].includes(elm.tagName)) {\n                return;\n            }\n            /** @type {?} */\n            const hash = elm.dataset.hash;\n            if (hash) {\n                elm.setAttribute('href', '#' + hash);\n                elm.setAttribute('onclick', '');\n                elm.onclick = (/**\n                 * @param {?} ev\n                 * @return {?}\n                 */\n                (ev) => {\n                    ev.preventDefault();\n                    /** @type {?} */\n                    const destination = document.getElementById(hash);\n                    if (destination) {\n                        /** @type {?} */\n                        const url = new URL(window.location.href);\n                        url.hash = hash;\n                        history.replaceState('', '', url.toString());\n                        destination.scrollIntoView();\n                    }\n                });\n                return;\n            }\n            /** @type {?} */\n            const routes = yield this.routes;\n            /** @type {?} */\n            const href = elm.getAttribute('href');\n            /** @type {?} */\n            const lnk = basePathOnly(href.toLowerCase());\n            /** @type {?} */\n            const route = routes.find((/**\n             * @param {?} r\n             * @return {?}\n             */\n            (r) => basePathOnly(r.route.toLowerCase()) === lnk));\n            /** only upgrade routes known by scully. */\n            if (lnk && route && !lnk.startsWith('#')) {\n                elm.onclick = (/**\n                 * @param {?} ev\n                 * @return {?}\n                 */\n                (ev) => __awaiter(this, void 0, void 0, function* () {\n                    /** @type {?} */\n                    const splitRoute = route.route.split(`/`);\n                    /** @type {?} */\n                    const curSplit = location.pathname.split('/');\n                    // loose last \"part\" of route\n                    curSplit.pop();\n                    ev.preventDefault();\n                    /** @type {?} */\n                    const routed = yield this.router.navigate(splitRoute).catch((/**\n                     * @param {?} e\n                     * @return {?}\n                     */\n                    (e) => {\n                        console.error('routing error', e);\n                        return false;\n                    }));\n                    if (!routed) {\n                        return;\n                    }\n                    /** check for the same route with different \"data\", and NOT a 1 level higher (length), and is not a fragment of th same page */\n                    if (curSplit.every((/**\n                     * @param {?} part\n                     * @param {?} i\n                     * @return {?}\n                     */\n                    (part, i) => splitRoute[i] === part)) && splitRoute.length !== curSplit.length + 1) {\n                        setTimeout((/**\n                         * @return {?}\n                         */\n                        () => this.replaceContent()), 10); // a small delay, so we are sure the angular parts in the page are settled enough\n                    }\n                }));\n            }\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    replaceContent() {\n        /**\n         * as Angular doesn't destroy the component if we stay on the same page,\n         * we have to manually delete old content. Also we need to kick of loading\n         * the new content. handlePage() takes care of that.\n         */\n        /** delete the content, as it is now out of date! */\n        window.scullyContent = undefined;\n        /** @type {?} */\n        const parent = this.elm.parentElement;\n        /** @type {?} */\n        let cur = (/** @type {?} */ (findComments(parent, 'scullyContent-begin')[0]));\n        while (cur && cur !== this.elm) {\n            /** @type {?} */\n            const next = cur.nextSibling;\n            parent.removeChild(cur);\n            cur = next;\n        }\n        this.handlePage();\n    }\n    /**\n     * @param {?} elm\n     * @return {?}\n     */\n    getCSSId(elm) {\n        return elm.getAttributeNames().find((/**\n         * @param {?} a\n         * @return {?}\n         */\n        (a) => a.startsWith('_ngcontent'))) || '';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.routeSub.unsubscribe();\n        /** reset the lastused */\n        lastHandled = '//';\n    }\n}\nScullyContentComponent.ɵfac = function ScullyContentComponent_Factory(t) { return new (t || ScullyContentComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScullyRoutesService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Location), ɵngcc0.ɵɵdirectiveInject(SCULLY_LIB_CONFIG)); };\nScullyContentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ScullyContentComponent, selectors: [[\"scully-content\"]], ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScullyContentComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\"\\n      :host {\\n        display: none;\\n      }\\n      scully-content {\\n        display: none;\\n      }\\n    \"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nScullyContentComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScullyRoutesService },\n    { type: Router },\n    { type: Location },\n    { type: undefined, decorators: [{ type: Inject, args: [SCULLY_LIB_CONFIG,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScullyContentComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line: component-selector\n                selector: 'scully-content',\n                template: '<ng-content></ng-content>',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: true,\n                styles: [`\n      :host {\n        display: none;\n      }\n      scully-content {\n        display: none;\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScullyRoutesService }, { type: ɵngcc1.Router }, { type: ɵngcc2.Location }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [SCULLY_LIB_CONFIG]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    ScullyContentComponent.prototype.baseUrl;\n    /** @type {?} */\n    ScullyContentComponent.prototype.elm;\n    /**\n     * pull in all  available routes into an eager promise\n     * @type {?}\n     */\n    ScullyContentComponent.prototype.routes;\n    /**\n     * monitor the router, so we can update while navigating in the same 'page' see #311\n     * @type {?}\n     */\n    ScullyContentComponent.prototype.routeUpdates$;\n    /** @type {?} */\n    ScullyContentComponent.prototype.routeSub;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScullyContentComponent.prototype.elmRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScullyContentComponent.prototype.srs;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScullyContentComponent.prototype.router;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScullyContentComponent.prototype.location;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScullyContentComponent.prototype.conf;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/scully-content/scully-content.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScullyContentModule {\n}\nScullyContentModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScullyContentModule });\nScullyContentModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScullyContentModule_Factory(t) { return new (t || ScullyContentModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScullyContentModule, { declarations: [ScullyContentComponent], exports: [ScullyContentComponent] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScullyContentModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [ScullyContentComponent],\n                exports: [ScullyContentComponent]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/scully-lib.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScullyLibModule {\n    /**\n     * @param {?} idle\n     */\n    constructor(idle) {\n        this.idle = idle;\n    }\n    /**\n     * We use a little trick to get a working idle-service.\n     * First, we separate out the component in a separate module to prevent a circulair injection\n     * second we create a constuctor that activates the IdleMonitorService. as that is provided for 'root'\n     * there will be only 1 instance in our app.\n     * We don't need forRoot, as we are not configuring anything in here.\n     * @param {?=} config\n     * @return {?}\n     */\n    static forRoot(config = ScullyDefaultSettings) {\n        config = Object.assign({}, ScullyDefaultSettings, config);\n        return {\n            ngModule: ScullyLibModule,\n            providers: [{ provide: SCULLY_LIB_CONFIG, useValue: config }],\n        };\n    }\n}\nScullyLibModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScullyLibModule });\nScullyLibModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScullyLibModule_Factory(t) { return new (t || ScullyLibModule)(ɵngcc0.ɵɵinject(IdleMonitorService)); }, imports: [[ScullyContentModule], ScullyContentModule] });\n/** @nocollapse */\nScullyLibModule.ctorParameters = () => [\n    { type: IdleMonitorService }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScullyLibModule, { imports: [ScullyContentModule], exports: [ScullyContentModule] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScullyLibModule, [{\n        type: NgModule,\n        args: [{\n                imports: [ScullyContentModule],\n                exports: [ScullyContentModule]\n            }]\n    }], function () { return [{ type: IdleMonitorService }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ScullyLibModule.prototype.idle;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: scullyio-ng-lib.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { IdleMonitorService, ScullyContentComponent, ScullyContentModule, ScullyLibModule, ScullyRoutesService, TransferStateService, dropEndingSlash, isScullyGenerated, isScullyRunning, SCULLY_LIB_CONFIG as ɵb };\n\n//# sourceMappingURL=scullyio-ng-lib.js.map","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { ScullyLibModule } from '@scullyio/ng-lib';\nimport { StaticpagesComponent } from './components/static-pages/staticpages.component';\nimport { StaticpagesRoutingModule } from './staticpages-routing.module';\n\n@NgModule({\n  declarations: [StaticpagesComponent],\n  imports: [\n    CommonModule,\n    StaticpagesRoutingModule,\n    ScullyLibModule,\n    MatCardModule,\n  ],\n})\nexport class StaticPagesModule {}\n"],"sourceRoot":"webpack:///"}